diff --git a/Readability.js b/Readability.js
index b745aa01d8ea23e55c5c309c29262f6fa0a74a01..f559378758a07cb4945b1263c4fd79689cbd3f0e 100644
--- a/Readability.js
+++ b/Readability.js
@@ -154,7 +154,8 @@ Readability.prototype = {
 
   ALTER_TO_DIV_EXCEPTIONS: ["DIV", "ARTICLE", "SECTION", "P"],
 
-  PRESENTATIONAL_ATTRIBUTES: [ "align", "background", "bgcolor", "border", "cellpadding", "cellspacing", "frame", "hspace", "rules", "style", "valign", "vspace" ],
+  /** wv-marker: 程序中会移除这个数组里面的节点属性，这不是我想要的 */
+  PRESENTATIONAL_ATTRIBUTES: [],
 
   DEPRECATED_SIZE_ATTRIBUTE_ELEMS: [ "TABLE", "TH", "TD", "HR", "PRE" ],
 
@@ -191,7 +192,8 @@ Readability.prototype = {
     // Readability cannot open relative uris so we convert them to absolute uris.
     this._fixRelativeUris(articleContent);
 
-    this._simplifyNestedElements(articleContent);
+    /** wv-marker: 这个方法会删除简化子级嵌套元素，这不是我想要的 */
+    // this._simplifyNestedElements(articleContent);
 
     if (!this._keepClasses) {
       // Remove classes.
@@ -544,7 +546,8 @@ Readability.prototype = {
     var doc = this._doc;
 
     // Remove all style tags in head
-    this._removeNodes(this._getAllNodesWithTag(doc, ["style"]));
+    /** wv-marker：保留<style>标签 */
+    // this._removeNodes(this._getAllNodesWithTag(doc, ["style"]));
 
     if (doc.body) {
       this._replaceBrs(doc.body);
@@ -667,7 +670,8 @@ Readability.prototype = {
    * @return void
    **/
   _prepArticle: function(articleContent) {
-    this._cleanStyles(articleContent);
+    /** wv-marker: 保留style属性 */
+    // this._cleanStyles(articleContent);
 
     // Check for data tables before we continue, to avoid removing items in
     // those tables, which will often be isolated even though they're
@@ -966,7 +970,8 @@ Readability.prototype = {
         }
 
         // Turn all divs that don't have children block level elements into p's
-        if (node.tagName === "DIV") {
+        /** wv-marker: 此段代码会将 “div” 转为 “p” 标签，这不是我想要的 */
+        if (node.tagName === "DIV" && false) {
           // Put phrasing content into paragraphs.
           var p = null;
           var childNode = node.firstChild;
